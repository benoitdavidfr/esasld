title: Schema JSON d'une fiche de MD de dataset imbriqué (framed) et compactée le contexte défini
$id: https://raw.githubusercontent.com/benoitdavidfr/esasld/main/dataset.schema.yaml
decription: |
  Ce schéma permet de vérifier la structure de l'export Yaml-LD imbriqué et compacté fabriqué dans le cadre
  du projet https://github.com/benoitdavidfr/esasld
creator: https://github.com/benoitdavidfr
created: '2023-06-06'
modified: '2023-06-07'
definitions:
  dateTime:
    description: date et heure comme défini dans l'export, cad sans timezone et avec une précision variable
    type: string
    pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}
  date:
    type: string
    format: date
  UriOrArrayOfUris:
    oneOf:
      - {type: string, format: uri}
      - type: array
        items: {type: string, format: uri}
  resRef:
    description: référence à une ressource
    type: object
    additionalProperties: false
    required: [$id]
    properties:
      $id: {type: string}
  Frequency:
    description: dct:Frequency
    type: object
    additionalProperties: false
    required: [isA, label]
    properties:
      $id: {type: string}
      isA: {enum: [Frequency]}
      label: {type: string}
  Organization:
    description: foaf:Organization
    type: object
    additionalProperties: false
    required: [isA, name]
    properties:
      $id: {type: string}
      isA: {enum: [Organization]}
      name: {type: string}
      mbox: {type: string}
      workplaceHomepage: {type: string}
  Organizations:
    oneOf:
      - $ref: '#/definitions/Organization'
      - type: array
        items: {$ref: '#/definitions/Organization'}
  VCard:
    decription: vcard:Kind
    type: object
    additionalProperties: false
    required: [isA, hasEmail]
    properties:
      $id: {type: string}
      isA: {enum: [VCard]}
      hasEmail: {type: string}
      hasURL: {type: string}
      fullName: {type: string}
  VCards:
    oneOf:
      - $ref: '#/definitions/VCard'
      - type: array
        items: {$ref: '#/definitions/VCard'}
  PeriodOfTime:
    description: dct:PeriodOfTime
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      $id: {type: string}
      isA: {enum: [PeriodOfTime]}
      startDate: {type: string, format: date}
      endDate: {type: string, format: date}
  Concept:
    description: skos:Concept
    type: object
    additionalProperties: false
    required: [$id, isA, prefLabel]
    properties:
      $id: {type: string}
      isA: {enum: [Concept]}
      prefLabel: {type: string}
      inScheme: {$ref: '#/definitions/resRef'}
  Concepts:
    oneOf:
      - $ref: '#/definitions/Concept'
      - type: array
        items: {$ref: '#/definitions/Concept'}
  Statement:
    description: dct:RightsStatement | dct:ProvenanceStatement
    type: object
    additionalProperties: false
    required: [isA, label]
    properties:
      $id: {type: string}
      isA: {enum: [RightsStatement, ProvenanceStatement]}
      label: {type: string}
  Statements:
    oneOf:
      - $ref: '#/definitions/Statement'
      - type: array
        items: {$ref: '#/definitions/Statement'}
  LinguisticSystem:
    description: dct:LinguisticSystem
    type: object
    additionalProperties: false
    required: [$id, isA, label]
    properties:
      $id: {type: string}
      isA: {enum: [LinguisticSystem]}
      label: {type: string}
  LicenseDocument:
    description: dct:LicenseDocument
    type: object
    additionalProperties: false
    required: [$id, isA, label]
    properties:
      $id: {type: string}
      isA: {enum: [LicenseDocument]}
      label: {type: string}
  Standard:
    description: dct:Standard
    type: object
    additionalProperties: false
    required: [$id, isA, label]
    properties:
      $id: {type: string}
      isA: {enum: [Standard]}
      label: {type: string}
  Keywords:
    type: array
    items: {type: string}
  GeoJSONPolygon:
    description: TODO pattern
    type: string
  WktLitteral:
    description: TODO pattern
    type: string
  Location:
    description: dct:Location
    oneOf:
      - decription: définition par un rectangle encodé comme polygone
        type: object
        additionalProperties: false
        required: [isA]
        properties:
          isA: {enum: [Location]}
          geometryAsGeoJSON: {$ref: '#/definitions/GeoJSONPolygon'}
          geometryAsWktLiteral:  {$ref: '#/definitions/WktLitteral'}
          bboxAsWktLiteral:  {$ref: '#/definitions/WktLitteral'}
      - description: utilisation du référentiel Code officiel géographique INSEE
        type: object
        additionalProperties: false
        required: [$id, isA, label]
        properties:
          $id:
            type: string
            pattern: ^http://id.insee.fr/geo/(commune/\d{5}|departement/\d{2,3}|region/\d{2})$
          isA: {enum: [Location]}
          label: {type: string}
  Locations:
    oneOf:
      - $ref: '#/definitions/Location'
      - type: array
        items: {$ref: '#/definitions/Location'}
  DataService:
    description: dcat:DataService
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      isA: {enum: [DataService]}
      conformsTo: {$ref: '#/definitions/Standard'}
  MediaTypeOrExtent:
    description: dct:MediaTypeOrExtent
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      isA: {enum: [MediaTypeOrExtent]}
      labelLangString: {type: string}
  Distribution:
    description: dcat:Distribution
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      $id: {type: string, format: uri}
      isA: {enum: [Distribution]}
      title: {type: string}
      license: {$ref: '#/definitions/LicenseDocument'}
      accessService: {$ref: '#/definitions/DataService'}
      format: {$ref: '#/definitions/MediaTypeOrExtent'}
      accessURL: {type: string, format: uri}
      downloadURL: {type: string, format: uri}
      issuedT: {$ref: '#/definitions/dateTime'}
      modifiedT: {$ref: '#/definitions/dateTime'}
  Distributions:
    oneOf:
      - type: array
        items: {$ref: '#/definitions/Distribution'}
      - $ref: '#/definitions/Distribution'
  Catalog:
    description: dcat:Catalog
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      isA: {enum: [Catalog]}
      title: {type: string}
      homepage: {type: string, format: uri}
  CatalogRecord:
    description: dcat:CatalogRecord
    type: object
    additionalProperties: false
    required: [isA]
    properties:
      isA: {enum: [CatalogRecord]}
      contactPoint: {$ref: '#/definitions/VCards'}
      inCatalog: {$ref: '#/definitions/Catalog'}
      modifiedT: {type: string}
      language: {$ref: '#/definitions/LinguisticSystem'}
      identifierL: {type: string}
type: object
additionalProperties: false
required: [$id, isA, title]
properties:
  $id: {type: string}
  isA:
    oneOf:
      - enum: [Dataset]
      - type: array
        items:
          enum: [Dataset, DatasetSeries]
  title: {type: string}
  description: {type: string}
  publisher: {$ref: '#/definitions/Organization'}
  creator: {$ref: '#/definitions/Organization'}
  contactPoint: {$ref: '#/definitions/VCards'}
  status: {$ref: '#/definitions/Concept'}
  inSeries: {$ref: '#/definitions/UriOrArrayOfUris'}
  seriesMember: {$ref: '#/definitions/UriOrArrayOfUris'}
  issued: {$ref: '#/definitions/date'}
  issuedT: {$ref: '#/definitions/dateTime'}
  modified: {type: string}
  modifiedT: {type: string}
  created: {type: string}
  temporal: {$ref: '#/definitions/PeriodOfTime'}
  accrualPeriodicity:  {$ref: '#/definitions/Frequency'}
  provenance: {$ref: '#/definitions/Statements'}
  conformsTo: {$ref: '#/definitions/Standard'}
  theme: {$ref: '#/definitions/Concepts'}
  keyword: {$ref: '#/definitions/Keywords'}
  landingPage: {type: string}
  page: {type: string}
  language: {$ref: '#/definitions/LinguisticSystem'}
  accessRights: {$ref: '#/definitions/Statements'}
  rightsHolder: {$ref: '#/definitions/Organizations'}
  identifier: {type: string, format: uri}
  identifierL: {type: string}
  spatial: {$ref: '#/definitions/Locations'}
  isPrimaryTopicOf: {$ref: '#/definitions/CatalogRecord'}
  distribution: {$ref: '#/definitions/Distributions'}
